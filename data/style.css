:root {
  /* Light theme colors */
  --primary-color: #2c3e50;
  --secondary-color: #3498db;
  --background-color: #ecf0f1;
  --card-color: #ffffff;
  --text-color: #333333;
  --border-color: #dddddd;
  --danger-color: #e74c3c;
  --success-color: #27ae60;
}

[data-theme="dark"] {
  /* Dark theme colors */
  --primary-color: #1a2530;
  --secondary-color: #2980b9;
  --background-color: #121212;
  --card-color: #1e1e1e;
  --text-color: #f5f5f5;
  --border-color: #333333;
  --danger-color: #c0392b;
  --success-color: #219653;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Arial', sans-serif;
  background-color: var(--background-color);
  color: var(--text-color);
  line-height: 1.6;
  transition: background-color 0.3s ease, color 0.3s ease;
}

.container {
  max-width: 800px;
  margin: 0 auto;
  padding: 15px 20px; /* Reduce top/bottom padding */
}

/* Header layout restructuring */
header {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-bottom: 20px;
  position: relative;
  padding-top: 10px;
}

/* Redesigned header container */
.header-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-bottom: 15px;
  width: 100%;
}

/* Make logo bigger to 64x64px */
.header-logo {
  width: 64px;
  height: 64px;
  margin-bottom: 12px;
}

/* Force SVG to use correct colors in both light and dark themes */
.header-logo svg {
  fill: var(--secondary-color);
  width: 100%;
  height: 100%;
  stroke-width: 1.2;
}

/* Center the heading */
.header-container h1 {
  margin: 8px 0 0 0;
  text-align: center;
  font-size: 1.8rem;
}

/* Position the theme toggle button in the upper right corner */
.theme-toggle {
  position: absolute;
  top: 10px;
  right: 10px;
}

/* Remove the IP display */
.ip-display {
  display: none;
}

/* Responsive adjustments for the new header */
@media (max-width: 480px) {
  .header-logo {
    width: 48px;
    height: 48px;
    margin-bottom: 8px;
  }
  
  .header-container h1 {
    font-size: 1.4rem;
  }
}

header h1 {
  flex-grow: 1;
  text-align: center;
}

.theme-toggle {
  background-color: var(--card-color);
  border: 1px solid var(--border-color);
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.theme-toggle svg {
  width: 24px;
  height: 24px;
  fill: var(--text-color);
  display: block; /* Ensure proper sizing */
  aspect-ratio: 1 / 1; /* Maintain aspect ratio */
}

.ip-display {
  font-size: 0.9rem;
  color: var(--text-color);
  opacity: 0.7;
  margin-top: 5px;
}

h1 {
  color: var(--primary-color);
}

[data-theme="dark"] h1, 
[data-theme="dark"] h2 {
  color: white;
}

/* More compact card layout to reduce vertical scrolling */
.card {
  background-color: var(--card-color);
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  padding: 15px; /* Reduce from 20px */
  margin-bottom: 15px; /* Reduce from 20px */
  transition: background-color 0.3s ease, box-shadow 0.3s ease;
}

[data-theme="dark"] .card {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.4);
}

h2 {
  color: var(--primary-color);
  margin-bottom: 10px; /* Reduce from 15px */
  font-size: 1.4rem; /* Reduce from 1.5rem */
  text-align: center; /* Center all h2 headers */
}

.readings {
  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;
  margin-bottom: 10px; /* Reduce from 15px */
}

.reading-item {
  text-align: center;
  min-width: 120px;
  margin: 5px; /* Reduce from 10px */
}

.reading-label {
  font-size: 1rem;
  color: var(--text-color);
  opacity: 0.7;
}

.reading-value {
  font-size: 2.2rem; /* Reduce from 2.5rem */
  font-weight: bold;
  color: var(--secondary-color);
  line-height: 1.1; /* Add tighter line height */
}

.reading-unit {
  font-size: 1rem;
  color: var(--text-color);
  opacity: 0.7;
}

.status-row {
  display: flex;
  align-items: center;
  padding-top: 10px;
  border-top: 1px solid var(--border-color);
  justify-content: center; /* Center the status row items */
  padding: 8px 0; /* Reduce from 12px 0 */
  margin-bottom: 3px; /* Reduce from 5px */
  flex-wrap: wrap; /* Allow wrapping if needed */
}

.status-label {
  font-weight: bold;
  margin-right: 5px;
  font-size: 0.95rem; /* Slightly smaller text */
}

.status-value {
  margin-right: 10px;
  font-size: 0.95rem; /* Slightly smaller text */
}

.status-value.connected {
  color: var(--success-color);
}

.status-value.error {
  color: var(--danger-color);
}

.status-time {
  font-size: 0.8rem;
  color: var (--text-color);
  opacity: 0.7;
  margin-left: auto;
}

/* Separator between Output and Mode */
.separator {
  display: none;
}

/* Mode value styling in status row */
.mode-value, .mode-set-value {
  display: none;
}

/* Mode colors in status bar */
.mode-cv {
  color: #2196F3;
  font-weight: bold;
}

.mode-cc {
  color: #FF9800;
  font-weight: bold;
}

.mode-cp {
  color: #4CAF50;
  font-weight: bold;
}

.mode-unknown {
  color: #757575;
  font-style: italic;
}

/* For narrower screens, make status row more flexible */
@media (max-width: 480px) {
  .status-row {
    flex-wrap: wrap;
    justify-content: center;
    gap: 5px;
  }
  
  .separator {
    display: none; /* Hide separator on smaller screens */
  }
  
  /* Make each status item a group */
  .status-item {
    display: flex;
    align-items: center;
    margin-right: 8px;
  }
}

/* Form styles */
.form-group {
  margin-bottom: 12px; /* Reduce from 15px */
}

label {
  display: block;
  margin-bottom: 3px; /* Reduce from 5px */
  font-weight: bold;
  font-size: 0.9rem; /* Slightly smaller font */
}

input, select {
  width: 100%;
  padding: 6px 8px; /* Reduce from 8px */
  border: 1px solid var(--border-color);
  border-radius: 4px;
  font-size: 1rem;
  background-color: var(--card-color);
  color: var(--text-color);
  transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
  height: 36px; /* Explicitly set smaller height */
}

[data-theme="dark"] input, [data-theme="dark"] select {
  background-color: #2a2a2a;
  border-color: #444;
}

input:focus, select:focus {
  outline: none;
  border-color: var(--secondary-color);
}

.button-group {
  display: flex;
  justify-content: space-between;
  margin-top: 15px; /* Reduce from 20px */
}

button {
  padding: 10px 15px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 1rem;
  background-color: #95a5a6;
  color: white;
  transition: opacity 0.3s ease, background-color 0.3s ease;
}

button.primary {
  background-color: var(--secondary-color);
}

button.secondary {
  background-color: #7f8c8d;
}

button:hover {
  opacity: 0.9;
}

button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* WiFi status styles */
.wifi-status {
  margin-bottom: 15px;
}

.wifi-status .status-row {
  margin-bottom: 5px; /* Reduce from 8px */
  display: flex;
  align-items: center;
}

.wifi-status .status-label {
  width: 140px;
  font-weight: bold;
}

.wifi-status .status-value {
  flex-grow: 1;
}

button.danger {
  background-color: var(--danger-color);
}

/* Power Supply Control styles */
.power-supply-control {
  margin-bottom: 10px; /* Reduce from 15px */
}

.output-status {
  margin-bottom: 15px; /* Reduce from 20px */
  padding-bottom: 10px; /* Reduce from 15px */
  border-bottom: 1px solid var(--border-color);
  text-align: center; /* Center the output status section */
}

.control-settings {
  margin-top: 10px; /* Reduce from 15px */
}

.control-inputs {
  margin: 15px 0; /* Reduce from 20px 0 */
}

.input-with-button {
  display: flex;
  gap: 10px;
}

.input-with-button input {
  flex-grow: 1;
}

#output-status.on {
  color: var(--success-color);
  font-weight: bold;
  font-size: 1.2em;
}

#output-status.off {
  color: var(--danger-color);
  font-weight: bold;
  font-size: 1.2em;
}

/* Responsive adjustments */
@media (max-width: 600px) {
  /* Keep readings in a row even on mobile */
  .readings {
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-between;
    margin: 10px -5px; /* Negative margin to counter the item margin */
  }
  
  .reading-item {
    flex: 1;
    min-width: 0; /* Allow items to shrink below min-width */
    margin: 5px; /* Reduced margin for tighter fit */
  }
  
  .reading-value {
    font-size: 1.6rem; /* Reduce from 1.8rem for mobile */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  .reading-label, .reading-unit {
    font-size: 0.8rem; /* Smaller font for labels and units */
  }
  
  /* Other mobile adjustments */
  .button-group {
    flex-direction: column;
  }
  
  button {
    margin-bottom: 10px;
  }

  .theme-toggle {
    width: 32px;
    height: 32px;
  }
  
  .theme-toggle svg {
    width: 20px;
    height: 20px;
  }

  .container {
    max-width: 100%;
    padding: 10px;
    overflow: hidden; /* Prevent horizontal scrolling */
  }
  
  .cards-container {
    display: flex;
    transition: transform 0.3s ease;
    width: 100%;
    overflow: visible; /* Allow cards to be visible outside container for swipe */
    will-change: transform; /* Optimize for animations */
    min-height: 200px; /* Ensure minimum height */
    -webkit-overflow-scrolling: touch; /* Improve scroll on iOS */
  }
  
  /* Fix for cards growing in width */
  .card {
    flex: 0 0 auto; /* Prevent flex growth */
    width: calc(100% - 30px) !important; /* Force width */
    margin-right: 15px;
    box-sizing: border-box;
    overflow-y: auto;
    max-height: 75vh;
    min-height: 50vh;
    padding: 12px 10px; /* Reduce padding further on mobile */
    /* Improve GPU rendering */
    transform: translateZ(0);
    backface-visibility: hidden;
  }
  
  .card:last-child {
    margin-right: 0;
  }
  
  .dots-indicator {
    display: flex;
    justify-content: center;
    margin: 15px 0;
    padding: 5px 0;
  }
  
  .dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: var(--border-color);
    margin: 0 5px;
    transition: background-color 0.3s ease;
    cursor: pointer; /* Make it clear dots are clickable */
  }
  
  .dot.active {
    background-color: var(--secondary-color);
    transform: scale(1.2); /* Slightly enlarge active dot */
  }
  
  /* Ensure swiping doesn't cause unwanted scrolling */
  body.swiping {
    overflow: hidden;
  }

  /* Add width/height adaptation for different device orientations */
  @media (orientation: landscape) {
    .card {
      max-height: 85vh; /* Slightly taller in landscape */
      padding: 10px; /* Even less padding in landscape to maximize content area */
    }
    
    /* Adjust font sizes for landscape */
    h2 {
      font-size: 1.2rem; /* Reduce from 1.3rem for mobile */
      margin-bottom: 8px; /* Reduce more on mobile */
    }
    
    .reading-value {
      font-size: 1.6rem; /* Slightly smaller readings in landscape */
    }
  }
  
  /* Make cards flexible based on content */
  .cards-container {
    height: auto;
    min-height: 60vh;
  }
  
  /* Optimize buttons for touch */
  button {
    min-height: 44px; /* Better for touch targets */
    padding: 8px 12px;
  }
  
  /* Responsive form elements */
  .form-group {
    margin-bottom: 10px; /* Tighter spacing */
  }
  
  input, select {
    height: 40px; /* Larger touch targets */
    font-size: 16px; /* Prevent iOS zoom on focus */
  }
  
  /* Ensure content scrolls properly when keyboard appears */
  @supports (-webkit-touch-callout: none) {
    /* iOS specific - fix for keyboard pushing content */
    .card {
      max-height: -webkit-fill-available;
    }
  }
  
  /* More responsive sizing for different device sizes */
  @media (max-height: 700px) {
    .card {
      max-height: 75vh; /* Shorter for small devices */
    }
    
    .reading-value {
      font-size: 1.5rem; /* Smaller text for small devices */
    }
  }
  
  @media (min-height: 800px) {
    .card {
      max-height: 85vh; /* Taller for larger devices */
    }
  }

  /* Fix for readings breaking the layout */
  .readings {
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-between;
    margin: 10px -5px;
    width: 100%; /* Ensure readings take full width */
    box-sizing: border-box; /* Include padding in width calculation */
    padding: 0 5px; /* Slight padding for spacing */
    overflow: hidden; /* Prevent overflow */
    max-width: 100%; /* Cap width to prevent overflow */
  }
  
  .reading-item {
    flex: 1 1 33%; /* Equal width distribution with fixed ratio */
    min-width: 0; /* Allow items to shrink below min-width */
    margin: 5px;
    width: 33%; /* Fixed width for each reading */
    box-sizing: border-box; /* Include padding in width calculation */
    max-width: 33%; /* Cap maximum width */
  }
  
  /* Ensure card content stays within bounds */
  .card {
    box-sizing: border-box;
    width: 100% !important; /* Force card width */
    overflow-x: hidden; /* Hide horizontal overflow */
    padding: 15px; /* Slightly reduced padding for mobile */
    overflow-wrap: break-word; /* Handle long text properly */
  }
  
  /* Fix for swiping cards */
  .cards-container {
    width: auto !important; /* Initial value */
    transform: none !important; /* Initial value */
  }
  
  /* Setting consistent sizing for cards in swipe container */
  .cards-container .card {
    width: calc(100vw - 50px) !important; /* Account for container padding */
    margin: 0 15px;
    flex: 0 0 auto;
  }
  
  /* Disable transitions during initial load */
  body.loading .cards-container {
    transition: none !important;
  }
  
  /* Fix flickering/jumping during load */
  body.loading * {
    animation: none !important;
    transition: none !important;
  }
  
  /* Ensure power supply readings stay in line */
  .power-supply-control .control-settings {
    overflow: hidden;
  }
  
  /* Improved Mobile swipe card styles */
  /* Improve container styling */
  .container {
    max-width: 100%;
    padding: 10px;
    overflow: hidden; /* Prevent horizontal scrolling */
    -webkit-overflow-scrolling: touch;
  }
  
  /* Fix cards container for swiping */
  .cards-container {
    width: 100%; /* Initial value before JS takes over */
    display: block; /* Initial value before JS takes over */
    transform: none; /* Initial value before JS takes over */
    touch-action: pan-y; /* Allow vertical scrolling but handle horizontal ourselves */
    will-change: transform; /* Hint for browser to optimize */
    -webkit-overflow-scrolling: touch;
  }
  
  /* Better card styling for swiping */
  .card {
    box-sizing: border-box;
    width: 100%; /* Initial value before JS takes over */
    padding: 15px;
    margin-bottom: 0; /* Remove default margin when in swipe mode */
    overflow-y: auto;
    overflow-x: hidden;
    -webkit-overflow-scrolling: touch;
    transform: translateZ(0); /* Hardware acceleration */
    backface-visibility: hidden;
  }
  
  /* Improved dots indicators */
  .dots-indicator {
    display: flex;
    justify-content: center;
    margin: 15px 0;
    padding: 8px 0;
    z-index: 10;
  }
  
  .dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: var(--border-color);
    margin: 0 8px;
    transition: all 0.3s ease;
    cursor: pointer;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
  }
  
  .dot.active {
    background-color: var(--secondary-color);
    transform: scale(1.2);
    box-shadow: 0 1px 4px rgba(0,0,0,0.2);
  }
  
  /* Prevent jumping during orientation changes */
  body.orientation-changing * {
    transition: none !important;
    animation: none !important;
  }
  
  /* Improve readings display in cards */
  .readings {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-between;
    width: 100%;
    overflow-x: hidden;
    margin: 10px 0;
  }
  
  .reading-item {
    flex: 1;
    width: 33%;
    min-width: 0;
    max-width: 33%;
    box-sizing: border-box;
    padding: 0 5px;
    margin: 5px;
  }
  
  .reading-value {
    font-size: 1.8rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  .reading-label, .reading-unit {
    font-size: 0.8rem;
  }
  
  /* Ensure card content stays properly contained */
  .card > * {
    max-width: 100%;
    overflow-x: hidden;
  }
  
  /* Improve form elements for touch */
  input, select, button {
    font-size: 16px; /* Prevents iOS zoom */
    height: 44px; /* Better touch target */
  }
  
  /* Fix layout in both orientations */
  @media (orientation: portrait) {
    .card {
      max-height: 75vh;
      min-height: 50vh;
    }
    
    .readings {
      margin: 10px -5px;
    }
  }
  
  @media (orientation: landscape) {
    .card {
      max-height: 85vh;
      min-height: 40vh;
    }
    
    /* Slightly smaller text in landscape */
    h2 {
      font-size: 1.2rem; /* Reduce from 1.3rem for mobile */
      margin-bottom: 8px; /* Reduce more on mobile */
    }
    
    .reading-value {
      font-size: 1.6rem;
    }
    
    .reading-label, .reading-unit {
      font-size: 0.75rem;
    }
  }
  
  /* Custom overrides that apply to either orientation */
  @media (max-width: 600px) {
    /* Make sure these rules are applied regardless of what's in other sections */
    .cards-container {
      width: 100% !important;
      transition: transform 0.3s ease !important;
    }
    
    .card {
      box-sizing: border-box !important;
      overflow-x: hidden !important;
    }
    
    .readings {
      width: 100% !important;
      display: flex !important;
      flex-direction: row !important;
      flex-wrap: nowrap !important;
    }
    
    .reading-item {
      flex: 1 !important;
      min-width: 0 !important;
    }
  }

  /* Status row in mobile view should remain centered */
  .status-row {
    justify-content: center;
  }
  
  /* Output status should have centered buttons in mobile view too */
  .output-status button {
    margin-left: auto;
    margin-right: auto;
    display: block;
    width: 80%; /* Make buttons wider for better touch targets */
    max-width: 300px; /* But not too wide on larger phones */
  }

  /* Optimize card heights in Progressive Web App to eliminate empty space */
  @media (max-width: 600px) {
    /* Fix card height calculation to avoid empty space above dots */
    .card {
      max-height: 75vh; /* Revert to original value */
      min-height: 50vh; /* Restore original minimum height */
      overflow-y: auto;
      box-sizing: border-box;
      margin-bottom: 20px; /* Restore original margin */
    }
    
    /* Restore container padding */
    .container {
      max-width: 100%;
      padding: 10px;
      overflow: hidden; /* Prevent horizontal scrolling */
    }
    
    /* Restore dots indicator position */
    .dots-indicator {
      display: flex;
      justify-content: center;
      margin: 15px 0;
      padding: 5px 0;
      position: static; /* Restore to static positioning */
      bottom: auto;
      left: auto;
      right: auto;
      background-color: transparent;
      box-shadow: none;
    }
  }
  
  /* Additional viewport-specific height adjustments */
  @media (max-height: 700px) and (max-width: 600px) {
    .card {
      max-height: calc(100vh - 160px); /* Slightly smaller for very small screens */
    }
  }
  
  @media (min-height: 800px) and (max-width: 600px) {
    .card {
      max-height: calc(100vh - 190px); /* Slightly larger for taller screens */
    }
  }
  
  /* Prevent cards from growing taller than needed on larger screens */
  @media (min-width: 601px) {
    .card {
      height: auto; /* Let content determine height */
      max-height: none; /* Remove max height restriction */
    }
  }
  
  /* Enhanced mobile card/swipe styles */
  @media (max-width: 600px) {
    /* Improved cards container for smoother swiping */
    .cards-container {
      display: flex;
      flex-wrap: nowrap;
      overflow-x: hidden;
      width: 300%; /* Will be set by JS */
      touch-action: pan-y; /* Allow vertical scrolling but handle horizontal ourselves */
      will-change: transform; /* Optimize for animations */
      transform: translateX(0); /* Initial transform */
      -webkit-overflow-scrolling: touch;
      position: relative;
      margin: 0 -10px; /* Negative margin to counter card padding */
    }
    
    /* Improved card styling for swiping */
    .cards-container .card {
      box-sizing: border-box;
      flex: 0 0 auto;
      width: 33.333%; /* Will be set by JS */
      margin: 0 10px;
      height: auto;
      padding: 15px;
      overflow-y: auto;
      overflow-x: hidden;
      -webkit-overflow-scrolling: touch;
      transform: translateZ(0); /* Hardware acceleration */
      backface-visibility: hidden;
      transition: none; /* Let the container handle transitions */
    }
    
    /* Prevent scrolling during swipe */
    body.swiping {
      overflow: hidden;
      touch-action: none;
    }
    
    /* Enhanced dots indicator for better visibility */
    .dots-indicator {
      display: flex;
      justify-content: center;
      align-items: center;
      margin: 15px 0;
      padding: 10px 0;
      z-index: 10;
    }
    
    .dot {
      width: 12px;
      height: 12px;
      border-radius: 50%;
      background-color: var(--border-color);
      margin: 0 8px;
      transition: all 0.25s ease;
      cursor: pointer;
      box-shadow: 0 1px 3px rgba(0,0,0,0.1);
      position: relative;
    }
    
    .dot.active {
      background-color: var(--secondary-color);
      transform: scale(1.2);
      box-shadow: 0 1px 4px rgba(0,0,0,0.2);
    }
    
    /* Add ripple effect for dots when tapped */
    .dot::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: var(--secondary-color);
      border-radius: 50%;
      opacity: 0;
      transform: scale(1);
      transition: all 0.3s ease;
    }
    
    .dot:active::after {
      opacity: 0.3;
      transform: scale(1.5);
    }
  }

  /* Fix for dots-indicator to prevent overlay during vertical scrolling on mobile browsers */
  @media (max-width: 600px) {
    /* Create space for the dots at the bottom of the container */
    .container {
      padding-bottom: 60px !important; /* Ensure enough space for dots */
    }
    
    /* Style the dots indicator as a solid block with proper spacing */
    .dots-indicator {
      position: relative !important; /* Override any fixed positioning */
      bottom: auto !important;
      left: auto !important;
      right: auto !important;
      margin: 15px 0 0 0 !important;
      padding: 10px 0 !important;
      background-color: var(--background-color) !important;
      box-shadow: none !important;
      z-index: 1 !important; /* Lower z-index so it doesn't overlay */
      width: 100% !important;
      clear: both !important; /* Ensure it's on its own line */
      display: block !important; /* Force block display */
    }
    
    /* Ensure cards don't overflow into the dots area */
    .card {
      margin-bottom: 10px !important;
      max-height: calc(100vh - 220px) !important; /* Account for dots height */
    }
    
    /* Create a better visual separation between cards and dots */
    .card:last-child {
      margin-bottom: 15px !important;
    }
    
    /* Fix any potential stacking context issues */
    body {
      display: flex;
      flex-direction: column;
      min-height: 100vh;
    }
    
    /* Make container take available space but not overflow */
    .container {
      flex: 1 0 auto;
      display: flex;
      flex-direction: column;
    }
  
    /* When in swipe mode, ensure correct display */
    body.swiping .dots-indicator {
      position: relative !important;
      margin-top: 15px !important;
    }
  }
  
  /* Additional fix for very small screens */
  @media (max-height: 600px) and (max-width: 600px) {
    .dots-indicator {
      margin-top: 10px !important;
      padding: 5px 0 !important;
    }
    
    .container {
      padding-bottom: 40px !important;
    }
    
    .card {
      max-height: calc(100vh - 180px) !important;
    }
  }
}

/* Simplified Mobile Card Styles */
@media (max-width: 600px) {
  /* Basic card styling */
  .card {
    margin-bottom: 10px;
    padding: 15px;
    overflow-y: auto;
    max-height: 80vh;
  }
  
  /* Nice dot indicators for card navigation */
  .dots-indicator {
    display: flex;
    justify-content: center;
    margin: 15px 0;
    padding: 5px 0;
  }
  
  .dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: var(--border-color);
    margin: 0 8px;
    transition: all 0.3s ease;
    cursor: pointer;
  }
  
  .dot.active {
    background-color: var(--secondary-color);
    transform: scale(1.2);
    box-shadow: 0 1px 3px rgba(0,0,0,0.2);
  }
  
  /* Keep readings in a row even on mobile */
  .readings {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-between;
    width: 100%;
    margin: 10px 0;
  }
  
  .reading-item {
    flex: 1;
    min-width: 0;
    margin: 5px;
    text-align: center;
  }
  
  .reading-value {
    font-size: 1.8rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  .reading-label, .reading-unit {
    font-size: 0.8rem;
  }
  
  /* Responsive buttons and form elements */
  .button-group {
    flex-direction: column;
  }
  
  button {
    margin-bottom: 10px;
    min-height: 44px;
  }
  
  input, select {
    height: 44px;
    font-size: 16px;
  }
  
  /* Responsive layout adjustments */
  .container {
    padding: 10px;
  }
  
  .theme-toggle {
    width: 32px;
    height: 32px;
  }
  
  .theme-toggle svg {
    width: 20px;
    height: 20px;
  }
}

/* Additional responsive adjustments */
@media (max-width: 400px) {
  /* Extremely small screens (older phones) */
  .container {
    padding: 5px;
  }
  
  h1 {
    font-size: 1.4rem;
  }
  
  .reading-value {
    font-size: 1.4rem;
  }
}

@media (min-width: 601px) and (max-width: 800px) {
  /* Tablets and larger phones */
  .card {
    padding: 15px;
  }
  
  .container {
    max-width: 95%;
  }
}

/* Remove all previous power button styles and create a simple rectangular button */
.power-button-container {
  display: flex;
  justify-content: center;
  margin: 15px 0; /* Reduce from 20px 0 */
}

.power-button {
  width: 100px;
  height: 36px;
  background-color: var(--danger-color); /* Red when off */
  border-radius: 4px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  color: white;
  font-weight: bold;
  transition: all 0.3s ease;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.power-button.on {
  background-color: var(--success-color); /* Green when on */
}

.power-button:hover {
  transform: scale(1.05);
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.25);
}

.power-button.active {
  transform: scale(0.95);
}

/* Dark theme adjustment */
[data-theme="dark"] .power-button {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);
}

/* Remove the original toggle button */
#toggle-output {
  display: none;
}

/* Mobile responsive refinements */
@media (max-width: 480px) {
  /* Even more padding for very small screens */
  .card {
    padding: 15px 12px;
    width: calc(100% - 24px) !important;
    margin-left: 12px;
    margin-right: 12px;
  }
  
  /* Adjust reading displays to fit smaller screens */
  .reading-value {
    font-size: 1.6rem;
  }
}

/* Smaller header for mobile devices */
@media (max-width: 600px) {
  header {
    margin-bottom: 10px;
  }
  
  header h1 {
    font-size: 1.3rem;
  }
  
  .ip-display {
    font-size: 0.7rem;
    margin-top: 2px;
  }
  
  /* Make dots stick to bottom of viewport */
  .dots-indicator {
    display: flex;
    justify-content: center;
    margin: 15px 0;
    padding: 5px 0;
    position: fixed;
    bottom: 10px;
    left: 0;
    right: 0;
    background-color: var(--background-color);
    margin: 0;
    padding: 10px 0;
    z-index: 100;
    box-shadow: 0 -2px 5px rgba(0,0,0,0.1);
  }
  
  /* Adjust content area to account for fixed dots */
  .container {
    padding-bottom: 40px;
  }
  
  /* Ensure all three cards are accessible */
  .card {
    min-height: auto;
    max-height: calc(80vh - 120px); /* Reduce card height to fit more content */
    overflow-y: auto;
    width: calc(100% - 20px) !important; /* Adjust for consistent side padding */
    margin-left: 10px;
    margin-right: 10px;
  }
  
  /* Further reduce padding for better space usage */
  .card {
    padding: 12px 10px;
  }
  
  h2 {
    font-size: 1.2rem;
    margin-bottom: 10px;
  }
}

/* Additional responsive adjustments for very small screens */
@media (max-height: 700px) and (max-width: 600px) {
  header h1 {
    font-size: 1.1rem;
  }
  
  .card {
    max-height: calc(80vh - 80px);
    padding: 10px 8px;
  }
  
  h2 {
    font-size: 1.1rem;
    margin-bottom: 8px;
  }
}

/* Header logo and title container styling */
.header-container {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 5px;
}

.header-logo {
  width: 32px;
  height: 32px;
  margin-right: 10px;
}

/* Force SVG to use correct colors in both light and dark themes */
.header-logo svg {
  fill: var(--primary-color);
  width: 100%;
  height: 100%;
}

/* Make sure the logo looks good in dark mode */
[data-theme="dark"] .header-logo svg {
  filter: brightness(1.2);
}

/* Adjust header h1 to work with the logo */
.header-container h1 {
  margin: 0;
}

/* Responsive adjustment for the header logo */
@media (max-width: 480px) {
  .header-logo {
    width: 24px;
    height: 24px;
    margin-right: 8px;
  }
}

/* Create a simpler, more reliable card styling for mobile without JS dependencies */
@media (max-width: 600px) {
  /* Basic card styling */
  .card {
    background-color: var(--card-color);
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    padding: 15px;
    margin-bottom: 15px;
    overflow-y: auto;
    max-height: calc(100vh - 175px); /* Account for header, dots, and margins */
  }
  
  /* Fix dots indicator so it's always visible and positioned properly */
  .dots-indicator {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 15px 0;
    padding: 5px 0;
    z-index: 10;
    position: fixed;
    bottom: 10px;
    left: 0;
    right: 0;
    background-color: var(--background-color);
    box-shadow: 0 -2px 5px rgba(0,0,0,0.1);
  }
  
  /* Make card container take proper space */
  .container {
    padding-bottom: 50px; /* Make room for fixed dots indicator */
  }
  
  /* Fix dot styling for better touch response */
  .dot {
    width: 14px;
    height: 14px;
    border-radius: 50%;
    background-color: var(--border-color);
    margin: 0 10px;
    transition: background-color 0.2s ease;
    cursor: pointer;
  }
  
  .dot.active {
    background-color: var(--secondary-color);
    transform: scale(1.2);
  }
  
  /* Ensure all cards have the same height characteristics */
  .card {
    min-height: auto; /* Allow natural height */
    width: calc(100% - 30px) !important;
    margin: 0 15px 15px 15px;
    display: none; /* Hide all cards by default (JS will show active) */
    box-sizing: border-box;
  }
  
  /* Remove problematic styles that interfere with card display */
  .cards-container {
    display: block !important;
    transform: none !important;
    width: 100% !important;
  }
}

/* Fix for power button display */
.power-button {
  width: 100px;
  height: 40px;
  background-color: var(--danger-color); /* Red when off */
  border-radius: 4px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  color: white;
  font-weight: bold;
  transition: all 0.3s ease;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  margin: 15px auto;
}

.power-button.on {
  background-color: var(--success-color); /* Green when on */
}

.power-button.active {
  transform: scale(0.95);
}

/* Make sure toggle-output is visible but not displayed */
#toggle-output {
  position: absolute;
  opacity: 0;
  pointer-events: none;
}

/* REVERT: Remove the problematic changes from the last fix attempt */
@media (max-width: 600px) {
  /* Remove the fix for dots-indicator that broke the layout */
  /* Remove these properties that caused problems */
  .container {
    padding-bottom: 40px;  /* Revert to this value */
  }
  
  /* Revert dots indicator to the fixed position at bottom that worked */
  .dots-indicator {
    position: fixed;
    bottom: 10px;
    left: 0;
    right: 0;
    background-color: var(--background-color);
    margin: 0;
    padding: 10px 0;
    z-index: 100;
    box-shadow: 0 -2px 5px rgba(0,0,0,0.1);
  }
  
  /* Card styling as it was before */
  .card {
    min-height: auto;
    max-height: calc(80vh - 120px);
    overflow-y: auto;
    width: calc(100% - 20px) !important;
    margin-left: 10px;
    margin-right: 10px;
    display: none; /* Hide all cards by default (JS shows active) */
  }
}

/* Remove all problematic fixes added in the last attempt */
@media (max-width: 600px) {
  body {
    display: block; /* Revert from flex */
    min-height: initial; /* Revert from 100vh */
  }
  
  .container {
    flex: initial; /* Revert from flex settings */
    display: block; /* Revert from flex */
    flex-direction: initial;
  }
}

/* Remove the custom fix styles that were added */
.card:last-child {
  margin-bottom: 15px;
}

/* Remove the additional fix for very small screens too */
@media (max-height: 600px) and (max-width: 600px) {
  .container {
    padding-bottom: 40px; /* Consistent with other mobile styles */
  }
  
  .card {
    max-height: calc(80vh - 120px); /* Consistent with other mobile styles */
  }
}

/* Fix for dots-indicator becoming vertical */
@media (max-width: 600px) {
  /* Ensure dots stay horizontal and centered */
  .dots-indicator {
    display: flex !important;
    flex-direction: row !important;
    justify-content: center !important;
    align-items: center !important;
    margin: 0 !important;
    padding: 10px 0 !important;
    position: fixed !important;
    bottom: 10px !important;
    left: 0 !important;
    right: 0 !important;
    width: 100% !important;
    text-align: center !important;
    background-color: var(--background-color) !important;
    box-shadow: 0 -2px 5px rgba(0,0,0,0.1) !important;
    z-index: 100 !important;
  }
  
  /* Style dots to ensure proper horizontal spacing */
  .dot {
    display: inline-block !important;
    width: 12px !important;
    height: 12px !important;
    border-radius: 50% !important;
    margin: 0 8px !important;
    padding: 0 !important;
  }
  
  /* Make container account for fixed position dots */
  .container {
    padding-bottom: 40px !important; /* Make space for the dots at bottom */
  }
  
  /* Adjust card height to account for dots */
  .card {
    max-height: calc(80vh - 120px) !important;
  }
}

/* Override any other media queries that might be causing the vertical layout */
@media (max-width: 600px) and (orientation: portrait),
       (max-width: 600px) and (orientation: landscape) {
  .dots-indicator {
    flex-direction: row !important;
    justify-content: center !important;
  }
}

/* Lock page scrolling and only allow card scrolling on mobile */
@media (max-width: 600px) {
  html, body {
    height: 100%;
    overflow: hidden; /* Prevent page scrolling */
    position: fixed;
    width: 100%;
    top: 0;
    left: 0;
  }
  
  .container {
    height: 100%;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    padding-bottom: 60px; /* Space for dots */
  }
  
  /* Make only visible card scrollable */
  .card {
    overflow-y: auto;
    -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */
    flex: 1; /* Take available space */
    max-height: none !important; /* Override previous max-height */
    height: auto !important; /* Let height adjust naturally */
  }
  
  /* Ensure cards container doesn't scroll */
  .cards-container {
    overflow: hidden !important;
    flex: 1;
    display: flex !important;
  }
  
  /* Fix dots indicator position at the bottom */
  .dots-indicator {
    position: fixed !important;
    bottom: 0 !important;
    left: 0 !important;
    right: 0 !important;
    padding: 10px 0 !important;
    margin: 0 !important;
    z-index: 100 !important;
    background-color: var(--background-color) !important;
    box-shadow: 0 -2px 5px rgba(0,0,0,0.1) !important;
    display: flex !important;
    flex-direction: row !important;
    justify-content: center !important;
  }
}

/* Fix dots in both orientations */
@media (max-width: 600px) and (orientation: portrait),
       (max-width: 600px) and (orientation: landscape) {
  .dots-indicator {
    flex-direction: row !important;
    justify-content: center !important;
  }
}
