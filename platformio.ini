; PlatformIO Project Configuration File

[env:seeed_xiao_esp32s3]
platform = espressif32           ; Specify ESP32 platform
board = seeed_xiao_esp32s3       ; Target board
framework = arduino              ; Use Arduino framework
monitor_speed = 115200           ; Serial monitor baud rate

; Library dependencies
lib_deps = 
	4-20ma/ModbusMaster@^2.0.1   ; Required for Modbus RTU communication
	https://github.com/tzapu/WiFiManager.git ; WiFi configuration portal
	https://github.com/me-no-dev/ESPAsyncWebServer.git ; Async Web Server
	https://github.com/me-no-dev/AsyncTCP.git ; Required for ESPAsyncWebServer
	bblanchon/ArduinoJson@^6.21.3 ; JSON handling for web interface

; Library finder mode - chain resolves dependencies more efficiently than deep+
lib_ldf_mode = chain

; PSRAM configuration for ESP32S3
board_build.arduino.memory_type = qio_opi    ; Enable Octal SPI for PSRAM

; Build flags
build_flags =
    -I${PROJECT_DIR}/lib/XY-SKxxx           ; Include our library headers
    -I${PROJECT_DIR}/include                ; Include project headers
    -I${PROJECT_DIR}/src/config             ; Config files
    -I${PROJECT_DIR}/src/web_interface      ; Web interface files (renamed from web)
    -I${PROJECT_DIR}/src/wifi_interface     ; WiFi manager wrapper
    -I${PROJECT_DIR}/src/modbus             ; Modbus code
    -DBOARD_HAS_PSRAM                       ; Enable PSRAM support
    -mfix-esp32-psram-cache-issue           ; Fix for ESP32 PSRAM cache issues
    -DARDUINO_USB_MODE=1                    ; Enable USB CDC mode for ESP32S3
    -DARDUINO_USB_CDC_ON_BOOT=1             ; Auto-enable USB CDC on boot
    -DASYNCWEBSERVER_REGEX=0                ; Disable regex in AsyncWebServer (lighter)
    -DUSE_ESP32=1                           ; Enable ESP32 specific code
    -DNO_RP2040=1                           ; Exclude RP2040 code
    -DNO_ESP8266=1                          ; Exclude ESP8266 code
    -Os                                     ; Optimize for size
    -DCORE_DEBUG_LEVEL=0                    ; Disable debug output
board_build.partitions = partitions.csv

; Custom scripts for extended functionality
extra_scripts = 
    pre:scripts/pre_build_script.py
    scripts/extra_script.py
    scripts/port_finder.py        ; Script to automatically find port

; Serial port configuration - AUTO DETECTION
upload_speed = 921600             ; Fast upload speed

; File System configuration for web interface
board_build.filesystem = littlefs

; Custom project tasks - these will show up in Project Tasks > Custom
custom_process_firmware_size = cd "$PROJECT_DIR" && python scripts/show_size.py
custom_show_partitions = cd "$PROJECT_DIR" && python scripts/show_partitions.py
custom_generate_partitions = cd "$PROJECT_DIR" && python scripts/gen_partitions.py
custom_prepare_filesystem = cd "$PROJECT_DIR" && python scripts/fs_script.py
custom_analyze_filesystem_size = cd "$PROJECT_DIR" && python scripts/analyze_fs_size.py